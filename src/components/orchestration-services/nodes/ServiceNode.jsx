import React from 'react';

import { RectNode, RectNodeModel, h } from '@logicflow/core';
import {repeatNode} from '../../../utils/orch-service/orchUtil';

class ServiceNodeModel extends RectNodeModel {
  initNodeData(data) {
    super.initNodeData(data);
    this.width = 120;
    this.height = 80;
    this.radius = 8;
  }

  getNodeStyle() {
    const style = super.getNodeStyle();
    style.stroke = 'black';
    return style;
  }

  // 设置连线规则
  getConnectedTargetRules() {
    const targetRules = super.getConnectedTargetRules();
    const notAsTarget = {
      message: '禁止自己连自己',
      validate: (source, target) => source.id !== target.id,
    };
    targetRules.push(notAsTarget);
    const notRepeat = {
      message: '禁止互为source和target',
      validate: (source, target) => repeatNode(target.outgoing.nodes, source.id)
    };
    targetRules.push(notRepeat);
    return targetRules;
  }

  getConnectedSourceRules() {
    const sourceRules = super.getConnectedSourceRules();
    const notRepeat = {
      message: '禁止互为source和target',
      validate: (source, target) => repeatNode(source.incoming.nodes, target.id)
    };
    sourceRules.push(notRepeat);
    const numberOfOutgoing = {
      message: '原子服务节点有且只有一个输出',
      validate: (source) => source.outgoing.edges.length < 1
    };
    sourceRules.push(numberOfOutgoing);
    return sourceRules;
  }
}

// 自定义节点的 view
class ServiceNodeView extends RectNode {
  getLabelShape() {
    const { model } = this.props;
    const {
      x, y, width, height
    } = model;
    const style = model.getNodeStyle();
    return h(
      'svg',
      {
        x: x - width / 2 + 5,
        y: y - height / 2,
        width: 40,
        height: 40,
        viewBox: '0 0 1274 1024'
      },
      h('path', {
        fill: style.stroke,
        d:
          'M853.333333 614.4c-4.266667-8.533333-12.8-12.8-21.333333-17.066667-21.333333-12.8-42.666667-12.8-64-8.533333v-153.6c21.333333 4.266667 42.666667 4.266667 64-8.533333 8.533333-4.266667 17.066667-12.8 21.333333-17.066667v204.8z m-89.6 140.8l-170.666666 93.866667v-17.066667c0-21.333333-8.533333-42.666667-21.333334-59.733333l132.266667-76.8c4.266667 21.333333 21.333333 38.4 38.4 51.2 8.533333 4.266667 17.066667 4.266667 21.333333 8.533333zM170.666667 409.6c4.266667 4.266667 12.8 12.8 21.333333 17.066667 21.333333 12.8 42.666667 12.8 64 8.533333v153.6c-21.333333-4.266667-42.666667-4.266667-64 8.533333-8.533333 4.266667-17.066667 12.8-21.333333 17.066667V409.6z m89.6-140.8l170.666666-93.866667v17.066667c0 21.333333 8.533333 42.666667 21.333334 59.733333L315.733333 328.533333c-4.266667-21.333333-17.066667-38.4-38.4-51.2-4.266667-4.266667-12.8-4.266667-17.066666-8.533333z m0 486.4c4.266667 0 12.8-4.266667 17.066666-8.533333 21.333333-12.8 34.133333-29.866667 38.4-51.2l132.266667 76.8c-12.8 17.066667-21.333333 38.4-21.333333 59.733333v17.066667l-166.4-93.866667zM763.733333 268.8c-4.266667 0-12.8 4.266667-17.066666 8.533333-21.333333 12.8-34.133333 29.866667-38.4 51.2l-132.266667-76.8c12.8-17.066667 21.333333-38.4 21.333333-59.733333v-17.066667l166.4 93.866667z m-285.866666 98.133333V341.333333h64v25.6c29.866667 8.533333 59.733333 21.333333 76.8 46.933334l21.333333-12.8 34.133333 55.466666-21.333333 12.8c4.266667 12.8 8.533333 29.866667 8.533333 46.933334s-4.266667 29.866667-8.533333 46.933333l21.333333 12.8-34.133333 55.466667-21.333333-12.8c-21.333333 21.333333-46.933333 38.4-76.8 46.933333v17.066667h-64v-25.6c-29.866667-8.533333-59.733333-21.333333-76.8-46.933334l-21.333334 12.8-34.133333-55.466666 21.333333-12.8c-4.266667-12.8-8.533333-29.866667-8.533333-46.933334s4.266667-29.866667 8.533333-46.933333l-21.333333-12.8 34.133333-55.466667 21.333334 12.8c21.333333-17.066667 46.933333-34.133333 76.8-38.4zM512 597.333333c46.933333 0 85.333333-38.4 85.333333-85.333333s-38.4-85.333333-85.333333-85.333333-85.333333 38.4-85.333333 85.333333 38.4 85.333333 85.333333 85.333333z m0-42.666666c-25.6 0-42.666667-17.066667-42.666667-42.666667s17.066667-42.666667 42.666667-42.666667 42.666667 17.066667 42.666667 42.666667-17.066667 42.666667-42.666667 42.666667z m0-320c-25.6 0-42.666667-17.066667-42.666667-42.666667s17.066667-42.666667 42.666667-42.666667 42.666667 17.066667 42.666667 42.666667-17.066667 42.666667-42.666667 42.666667z m0 640c-25.6 0-42.666667-17.066667-42.666667-42.666667s17.066667-42.666667 42.666667-42.666667 42.666667 17.066667 42.666667 42.666667-17.066667 42.666667-42.666667 42.666667z m238.933333-503.466667c-12.8-21.333333-4.266667-46.933333 17.066667-59.733333 21.333333-12.8 46.933333-4.266667 59.733333 17.066666s4.266667 46.933333-17.066666 59.733334c-21.333333 12.8-46.933333 4.266667-59.733334-17.066667z m-554.666666 320c-12.8-21.333333-4.266667-46.933333 17.066666-59.733333 21.333333-12.8 46.933333-4.266667 59.733334 17.066666 12.8 21.333333 4.266667 46.933333-17.066667 59.733334s-46.933333 4.266667-59.733333-17.066667z m76.8-320c-12.8 21.333333-38.4 29.866667-59.733334 17.066667-21.333333-12.8-25.6-38.4-17.066666-59.733334 12.8-17.066667 38.4-25.6 59.733333-12.8 21.333333 12.8 25.6 38.4 17.066667 55.466667z m554.666666 320c-12.8 21.333333-38.4 25.6-59.733333 17.066667-21.333333-12.8-25.6-38.4-17.066667-59.733334s38.4-25.6 59.733334-17.066666c21.333333 17.066667 25.6 42.666667 17.066666 59.733333z'
       })
    );
  }

  /**
   * 完全自定义节点外观方法
   */
  getShape() {
    const { model } = this.props;
    const {
      x, y, width, height, radius
    } = model;
    const style = model.getNodeStyle();
    return h('g', {}, [
      h('rect', {
        ...style,
        x: x - width / 2,
        y: y - height / 2,
        rx: radius,
        ry: radius,
        width,
        height
      }),
      this.getLabelShape()
    ]);
  }
}

export default {
  type: 'SERVICE_NODE',
  view: ServiceNodeView,
  model: ServiceNodeModel
};
